definitions:
  dto.CitizenCardRequest:
    properties:
      citizenId:
        type: string
      expireDate:
        type: string
      laserId:
        type: string
    required:
    - citizenId
    - expireDate
    - laserId
    type: object
  dto.CitizenCardResponse:
    properties:
      citizenId:
        type: string
      expireDate:
        type: string
      laserId:
        type: string
      picture:
        type: string
    type: object
  dto.HttpResponse:
    properties:
      error:
        type: string
      result: {}
    type: object
  dto.LoginRequest:
    properties:
      idToken:
        type: string
      provider:
        description: GOOGLE
        type: string
    required:
    - idToken
    - provider
    type: object
  dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  dto.RegisterRequest:
    properties:
      idToken:
        type: string
      provider:
        description: GOOGLE
        type: string
      role:
        description: CUSTOMER, PHOTOGRAPHER, ADMIN
        type: string
    required:
    - idToken
    - provider
    - role
    type: object
  dto.RegisterResponse:
    properties:
      accessToken:
        type: string
      exp:
        type: integer
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.TokenResponse:
    properties:
      accessToken:
        type: string
      exp:
        type: integer
      refreshToken:
        type: string
    type: object
  dto.UserResponse:
    properties:
      account_no:
        type: string
      bank:
        type: string
      bank_branch:
        type: string
      email:
        type: string
      facebook:
        type: string
      id:
        type: integer
      instagram:
        type: string
      name:
        type: string
      phone_number:
        type: string
      profile_picture_url:
        type: string
      role:
        type: string
    type: object
  dto.UserUpdateRequest:
    properties:
      account_no:
        type: string
      bank:
        type: string
      bank_branch:
        type: string
      email:
        type: string
      facebook:
        type: string
      instagram:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
info:
  contact: {}
  description: pic-me-pls API documentation
  title: pic-me-pls API
  version: "1.0"
paths:
  /api/v1/auth/Register:
    post:
      description: Register
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Register
      tags:
      - auth
  /api/v1/auth/login:
    post:
      description: Login
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.LoginRequest'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: Logout
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Logout
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      description: Refresh Token
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.TokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Refresh Token
      tags:
      - auth
  /api/v1/me:
    get:
      description: Get me
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Get me
      tags:
      - user
    patch:
      description: Update user's profile
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateRequest'
      - description: Profile picture (optional)
        in: formData
        name: profilePicture
        type: file
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Update me
      tags:
      - user
  /api/v1/photographer/citizen-card:
    get:
      description: Get Photographer Citizen Card
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.CitizenCardResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Get Citizen Card
      tags:
      - photographer
  /api/v1/photographer/reverify:
    patch:
      description: Reverify Photographer Citizen Card
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CitizenCardRequest'
      - description: Card picture (optional)
        in: formData
        name: cardPicture
        type: file
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.CitizenCardResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Reverify Citizen Card
      tags:
      - photographer
  /api/v1/photographer/verify:
    post:
      description: Verify Photographer Citizen Card
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CitizenCardRequest'
      - description: Card picture
        in: formData
        name: cardPicture
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.HttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.CitizenCardResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpResponse'
      summary: Verify Citizen Card
      tags:
      - photographer
schemes:
- https
- http
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
